---
import { getCollection } from 'astro:content'
import { Caption } from './tailus-ui/typography'
import { BlurDivs } from './utilities/DocsProgressiveBlur'
import Separator from '@tailus-ui/Separator'
import DocsBadge from './DocsBadge'

const html = await getCollection('html')
const blocks = await getCollection('blocks')
const currentPath = Astro.url.pathname

const sidebarPages = {
    html: html,
}

interface Props {
    target: keyof typeof sidebarPages
}

const { target } = Astro.props
const activeLinkClasses = 'font-medium text-info-600 dark:text-info-400 hover:text-info-700 dark:hover:text-info-300'

const reactOrder = ['get-started', 'theming', 'guides', 'typography', 'components', 'interactive', 'visualizations', 'blocks']
const blocksLinks = blocks
    .map((page) => ({
        name: page.data.title,
        href: page.slug,
        active: currentPath.includes(page.slug),
        priority: page.data.priorityOrder || 0,
    }))
    .sort((a, b) => a.priority - b.priority)
---

<script>
    document.addEventListener('astro:page-load', () => {
        let timeoutId
        const linksParent = document.querySelector('#linksParent')
        const currentScroll = sessionStorage.getItem('scrollPosition') || '0'
        linksParent!.scrollTop = JSON.parse(currentScroll)

        const handleScroll = (event) => {
            if (timeoutId !== null) {
                clearTimeout(timeoutId)
            }

            timeoutId = setTimeout(() => {
                sessionStorage.setItem('scrollPosition', event.target.scrollTop)
            }, 100)
        }

        linksParent?.addEventListener('scroll', (event) => {
            handleScroll(event)
        })
    })
</script>

<div class="relative h-full px-8 pt-6 lg:-ml-4 lg:px-0 lg:pl-4 lg:pt-0">
    <div aria-hidden="true" class="pointer-events-none absolute left-0 right-3 top-0 h-10">
        <BlurDivs />
    </div>
    <div aria-hidden="true" class="pointer-events-none absolute bottom-0 left-0 right-3 z-10 h-10 rotate-180">
        <BlurDivs />
    </div>
    <div class="custom-scrollbar -ml-2 h-full overflow-y-scroll pl-2" id="linksParent">
        <div class="space-y-6 pb-12 pt-6 [--body-text-color:var(--color-gray-600)] lg:pb-6 lg:pt-12 dark:[--body-text-color:var(--color-gray-400)]" data-rounded="full" data-shade="900">
            <div class="space-y-4" data-shade="800">
                <a href="https://ui.tailus.io/react/get-started/introduction" class="flex items-center gap-3 text-(--body-text-color) hover:text-(--title-text-color)">
                    <svg class="size-4" xmlns="http://www.w3.org/2000/svg" width="1.13em" height="1em" viewBox="0 0 256 228"
                        ><path
                            fill="currentColor"
                            d="M210.483 73.824a172 172 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171 171 0 0 0-6.375 5.848a156 156 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a171 171 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a146 146 0 0 0 6.921 2.165a168 168 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a146 146 0 0 0 5.342-4.923a168 168 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145 145 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844m-6.365 70.984q-2.102.694-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14m-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a157 157 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345q.785 3.162 1.386 6.193M87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a157 157 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a135 135 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94M50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a135 135 0 0 1-6.318-1.979m12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144 144 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160 160 0 0 1-1.76-7.887m110.427 27.268a348 348 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381 381 0 0 0-7.365-13.322m-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322 322 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18M82.802 87.83a323 323 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a322 322 0 0 0-7.848 12.897m8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321 321 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147m37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486m52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382 382 0 0 0 7.859-13.026a347 347 0 0 0 7.425-13.565m-16.898 8.101a359 359 0 0 1-12.281 19.815a329 329 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310 310 0 0 1-12.513-19.846h.001a307 307 0 0 1-10.923-20.627a310 310 0 0 1 10.89-20.637l-.001.001a307 307 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329 329 0 0 1 12.335 19.695a359 359 0 0 1 11.036 20.54a330 330 0 0 1-11 20.722m22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026q-.518 2.504-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a161 161 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3M128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86"
                        ></path></svg
                    >
                    <span class="text-sm">React</span>
                </a>
                <a href="" class="flex items-center gap-3 text-(--title-text-color)">
                    <svg class="size-4" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 16 16"><path fill="currentColor" d="M.946 0L2.23 14.4L7.992 16l5.777-1.602L15.055 0zM12.26 4.71H5.502l.161 1.809H12.1l-.485 5.422l-3.623 1.004l-3.618-1.004l-.247-2.774H5.9l.126 1.41l1.967.53l.004-.001l1.968-.531l.204-2.29H4.048l-.476-5.341h8.847l-.158 1.766z"></path></svg>
                    <span class="text-sm font-medium">Html</span>
                </a>
                <a href="#" class="flex items-center gap-3 text-(--body-text-color) hover:text-(--title-text-color)">
                    <svg class="size-4" xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"
                        ><path
                            fill="currentColor"
                            d="M24 12c0 6.628-5.372 12-12 12S0 18.628 0 12S5.372 0 12 0s12 5.372 12 12m-6.753-7.561c-1.22.042-2.283.715-3.075 1.644c-.878 1.02-1.461 2.229-1.881 3.461c-.753-.614-1.332-1.414-2.539-1.761a3.1 3.1 0 0 0-2.813.514c-.41.319-.71.757-.861 1.254c-.36 1.176.381 2.225.719 2.6l.737.79c.15.154.519.56.339 1.138c-.193.631-.951 1.037-1.732.799c-.348-.106-.848-.366-.734-.73c.045-.15.152-.263.21-.391c.052-.11.077-.194.095-.242c.141-.465-.053-1.07-.551-1.223c-.465-.143-.939-.03-1.125.566c-.209.68.117 1.913 1.86 2.449c2.04.628 3.765-.484 4.009-1.932c.153-.907-.255-1.582-1.006-2.447l-.612-.677c-.371-.37-.497-1.002-.114-1.485c.324-.409.785-.584 1.539-.379c1.103.3 1.594 1.063 2.412 1.68c-.338 1.11-.56 2.223-.759 3.222l-.123.746c-.585 3.07-1.033 4.757-2.194 5.726c-.234.166-.57.416-1.073.434c-.266.005-.352-.176-.355-.257c-.006-.184.15-.271.255-.353c.154-.083.39-.224.372-.674c-.016-.532-.456-.994-1.094-.973c-.477.017-1.203.465-1.176 1.286c.028.85.819 1.485 2.012 1.444c.638-.021 2.062-.281 3.464-1.949c1.633-1.911 2.09-4.101 2.434-5.706l.383-2.116q.318.037.69.048c2.032.044 3.049-1.01 3.064-1.776c.01-.464-.304-.921-.744-.91a.85.85 0 0 0-.806.654c-.094.428.646.813.068 1.189c-.41.266-1.146.452-2.184.3l.188-1.042c.386-1.976.859-4.407 2.661-4.467c.132-.007.612.006.623.323c.003.105-.022.134-.147.375a.86.86 0 0 0-.168.537c.017.504.4.836.957.816c.743-.023.955-.748.945-1.119c-.032-.874-.952-1.424-2.17-1.386"
                        ></path></svg
                    >
                    <span class="text-sm">Symfony</span>
                </a>
                <a href="https://ui.tailus.io/themer/get-started/introduction" class="flex items-center gap-3 text-(--body-text-color) hover:text-(--title-text-color)">
                    <svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24"
                        ><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"
                            ><path d="m20.27 7.796l-3.61 1.876l-4.392 2.236a.548.548 0 0 1-.536 0L7.341 9.672L3.73 7.796a.594.594 0 0 1 0-1.06l8.014-3.925a.571.571 0 0 1 .512 0l8.014 3.925a.594.594 0 0 1 0 1.06"></path><path d="m7.34 9.672l-3.61 1.723a.594.594 0 0 0 0 1.06l3.61 1.876l4.392 2.236a.547.547 0 0 0 .536 0l4.391-2.236l3.611-1.875a.594.594 0 0 0 0-1.014l-3.61-1.77"></path><path
                                d="m7.34 14.33l-3.61 1.725a.594.594 0 0 0 0 1.06l8.002 4.065a.547.547 0 0 0 .536 0l8.002-4.065a.594.594 0 0 0 0-1.014l-3.61-1.77"></path></g
                        ></svg
                    >
                    <span class="text-sm">Themer</span>
                </a>
            </div>
            <Separator dashed />
            {
                Object.entries(
                    sidebarPages[target].reduce((acc, page) => {
                        const [subdirectory] = page.slug.split('/')
                        if (!acc[subdirectory]) {
                            acc[subdirectory] = []
                        }
                        acc[subdirectory].push(page)
                        return acc
                    }, {})
                )
                    .sort(([a], [b]) => reactOrder.indexOf(a) - reactOrder.indexOf(b)) // Sort based on the order array
                    .map(([subdirectory, pages]) => (
                        <div>
                            <Caption as="span" weight="medium" neutral className="capitalize">
                                {subdirectory.replace('-', ' ')}
                            </Caption>
                            <ul class="mt-4 space-y-2">
                                {pages
                                    ?.sort((a, b) => a.data.priorityOrder - b.data.priorityOrder)
                                    .map((page) => (
                                        <li>
                                            <a href={`/${page.slug}`} class:list={currentPath === `/${page.slug}` ? activeLinkClasses : ''} class="flex items-center gap-2 text-[15px] text-(--body-text-color) transition duration-200 hover:text-gray-950 dark:hover:text-white">
                                                <span class="capitalize">{pages[0].slug.split('/')[0] === page.slug.split('/').pop() ? 'Overview' : page.slug.split('/').pop().replace('-', ' ')}</span>
                                                {page.data.badge && <DocsBadge badge={page.data.badge} />}
                                            </a>
                                        </li>
                                    ))}
                            </ul>
                        </div>
                    ))
            }
            <div>
                <Caption as="span" weight="medium" neutral className="capitalize">Blocks</Caption>
                <ul class="mt-4 space-y-2">
                    {
                        blocksLinks.map((page) => (
                            <li>
                                <a href={`/blocks/${page.href}`} class:list={currentPath === `/${page.href}` ? activeLinkClasses : ''} class="text-[15px] text-(--body-text-color) transition duration-200 hover:text-gray-950 dark:hover:text-white">
                                    <span class="capitalize">{page.name}</span>
                                </a>
                            </li>
                        ))
                    }
                </ul>
            </div>
        </div>
    </div>
</div>
